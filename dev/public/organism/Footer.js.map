{"version":3,"file":"Footer.js","sourceRoot":"","sources":["../../../src/organism/Footer.ts"],"names":[],"mappings":";;;;;;AAAA,OAAO,EAAC,UAAU,EAAE,IAAI,EAAE,GAAG,EAAC,MAAM,KAAK,CAAC;AAC1C,OAAO,EAAC,aAAa,EAAE,KAAK,EAAC,MAAM,mBAAmB,CAAC;AACvD,OAAO,EAAC,oBAAoB,EAAC,MAAM,+BAA+B,CAAC;AAGnE;;;;GAIG;AAEH,IAAa,MAAM,GAAnB,MAAa,MAAO,SAAQ,UAAU;IAepC;QACE,KAAK,EAAE,CAAC;QAKF,kBAAa,GAAG,CAAC,KAAqB,EAAE,EAAE;;YAChD,MAAA,QAAQ,CAAC,aAAa,CAAC,MAAM,CAAC,0CAAE,YAAY,CAAC,OAAO,EAAE,KAAK,EAAE;YAC7D,MAAM,CAAC,cAAc,CAAC,OAAO,CAAC,OAAO,EAAE,KAAK,CAAC,CAAC;QAChD,CAAC,CAAC;QAPA,IAAI,oBAAoB,CAAC,IAAI,CAAC,CAAC;IACjC,CAAC;IAQD,MAAM;QACJ,OAAO,IAAI,CAAA;;6BAEc,GAAG,EAAE,CAAC,IAAI,CAAC,aAAa,CAAC,OAAO,CAAC;;;6BAGjC,GAAG,EAAE,CAAC,IAAI,CAAC,aAAa,CAAC,OAAO,CAAC;;;6BAGjC,GAAG,EAAE,CAAC,IAAI,CAAC,aAAa,CAAC,eAAe,CAAC;;;6BAGzC,GAAG,EAAE,CAAC,IAAI,CAAC,aAAa,CAAC,UAAU,CAAC;;;6BAGpC,GAAG,EAAE,CAAC,IAAI,CAAC,aAAa,CAAC,UAAU,CAAC;;;6BAGpC,GAAG,EAAE,CAAC,IAAI,CAAC,aAAa,CAAC,MAAM,CAAC;;;6BAGhC,GAAG,EAAE,CAAC,IAAI,CAAC,aAAa,CAAC,WAAW,CAAC;;;;6BAIrC,GAAG,EAAE,CAAC,IAAI,CAAC,aAAa,CAAC,SAAS,CAAC;;;;6BAInC,GAAG,EAAE,CAAC,IAAI,CAAC,aAAa,CAAC,SAAS,CAAC;;;;KAI3D,CAAC;IACJ,CAAC;CACF,CAAA;AA5DQ,aAAM,GAAG,GAAG,CAAA;;;;;;;;;;;;GAYlB,CAAC;AAQF;IADC,KAAK,EAAE;6CAIN;AAxBS,MAAM;IADlB,aAAa,CAAC,YAAY,CAAC;GACf,MAAM,CA6DlB;SA7DY,MAAM","sourcesContent":["import {LitElement, html, css} from 'lit';\nimport {customElement, state} from 'lit/decorators.js';\nimport {ThemeColorController} from '../controller/set-theme-color';\nimport {ThemeVariation} from '../page/BasePage';\n\n/**\n * Text Styling Component\n *\n * @slot - This element has a slot\n */\n@customElement('iff-footer')\nexport class Footer extends LitElement {\n  static styles = css`\n    .button-list {\n      display: flex;\n      flex-direction: row;\n      padding-top: 5px;\n      padding-left: 25px;\n      flex-wrap: wrap;\n      padding: 0px var(--iff-dynamic__navigation--indent);\n    }\n    .button-list :not(:last-child) {\n      padding-right: 5px;\n    }\n  `;\n\n  constructor() {\n    super();\n    new ThemeColorController(this);\n  }\n\n  @state()\n  private setThemeColor = (theme: ThemeVariation) => {\n    document.querySelector('body')?.setAttribute('theme', theme);\n    window.sessionStorage.setItem('theme', theme);\n  };\n\n  render() {\n    return html`\n      <div class=\"button-list\">\n        <iff-button @click=${() => this.setThemeColor('light')}>\n          <iff-text styling=\"label\">Light</iff-text>\n        </iff-button>\n        <iff-button @click=${() => this.setThemeColor('black')}>\n          <iff-text styling=\"label\">Black</iff-text>\n        </iff-button>\n        <iff-button @click=${() => this.setThemeColor('blue-gradiant')}>\n          <iff-text styling=\"label\">Blue</iff-text>\n        </iff-button>\n        <iff-button @click=${() => this.setThemeColor('redGreen')}>\n          <iff-text styling=\"label\">Red Green</iff-text>\n        </iff-button>\n        <iff-button @click=${() => this.setThemeColor('triColor')}>\n          <iff-text styling=\"label\">TriColor</iff-text>\n        </iff-button>\n        <iff-button @click=${() => this.setThemeColor('wood')}>\n          <iff-text styling=\"label\">Wood</iff-text>\n        </iff-button>\n        <iff-button @click=${() => this.setThemeColor('blueGreen')}>\n          <iff-text styling=\"label\">Blue Green</iff-text>\n        </iff-button>\n        </iff-button>\n        <iff-button @click=${() => this.setThemeColor('spotify')}>\n          <iff-text styling=\"label\">spotify</iff-text>\n        </iff-button>\n        </iff-button>\n        <iff-button @click=${() => this.setThemeColor('pantone')}>\n          <iff-text styling=\"label\">pantone</iff-text>\n        </iff-button>\n      </div>\n    `;\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    'iff-footer': Footer;\n  }\n}\n"]}