{"version":3,"file":"ButtonList.js","sourceRoot":"","sources":["../../../src/molecule/ButtonList.ts"],"names":[],"mappings":";;;;;;AAAA,OAAO,eAAe,CAAC;AACvB,OAAO,EAAC,UAAU,EAAE,IAAI,EAAE,GAAG,EAAC,MAAM,KAAK,CAAC;AAC1C,OAAO,EAAC,aAAa,EAAC,MAAM,mBAAmB,CAAC;AAEhD;;;;;GAKG;AAEH,IAAa,UAAU,GAAvB,MAAa,UAAW,SAAQ,UAAU;IAiBxC,MAAM;QACJ,OAAO,IAAI,CAAA,gBAAgB,CAAC;IAC9B,CAAC;CACF,CAAA;AAnBQ,iBAAM,GAAG,GAAG,CAAA;;;;;;;;;;;;;;GAclB,CAAC;AAfS,UAAU;IADtB,aAAa,CAAC,iBAAiB,CAAC;GACpB,UAAU,CAoBtB;SApBY,UAAU","sourcesContent":["import '../atom/Title';\nimport {LitElement, html, css} from 'lit';\nimport {customElement} from 'lit/decorators.js';\n\n/**\n * Card to display articles\n *\n * @slot Slot to set title\n\n */\n@customElement('iff-button-list')\nexport class ButtonList extends LitElement {\n  static styles = css`\n    :host {\n      display: flex;\n      flex-wrap: wrap;\n    }\n    :host(:empty)::before {\n      content: 'SMTH';\n      color: black;\n    }\n    ::slotted(*) {\n      --iff-card__padding--top-bottom: 0.15rem;\n      --iff-card__padding--left-right: 0.15rem;\n      margin: 0.3rem;\n    }\n  `;\n\n  render() {\n    return html`<slot></slot> `;\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    'iff-button-list': ButtonList;\n  }\n}\n"]}