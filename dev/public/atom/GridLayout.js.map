{"version":3,"file":"GridLayout.js","sourceRoot":"","sources":["../../../src/atom/GridLayout.ts"],"names":[],"mappings":";;;;;;AAAA,OAAO,EAAC,UAAU,EAAE,IAAI,EAAE,GAAG,EAAC,MAAM,KAAK,CAAC;AAC1C,OAAO,EAAC,aAAa,EAAC,MAAM,mBAAmB,CAAC;AAEhD;;;;GAIG;AAEH,IAAa,UAAU,GAAvB,MAAa,UAAW,SAAQ,UAAU;IASxC,MAAM;QACJ,OAAO,IAAI,CAAA,iBAAiB,CAAC;IAC/B,CAAC;CACF,CAAA;AAXQ,iBAAM,GAAG,GAAG,CAAA;;;;;;GAMlB,CAAC;AAPS,UAAU;IADtB,aAAa,CAAC,iBAAiB,CAAC;GACpB,UAAU,CAYtB;SAZY,UAAU","sourcesContent":["import {LitElement, html, css} from 'lit';\nimport {customElement} from 'lit/decorators.js';\n\n/**\n * An example element.\n *\n * @slot Slot for the content\n */\n@customElement('iff-grid-layout')\nexport class GridLayout extends LitElement {\n  static styles = css`\n    :host {\n      display: grid;\n      grid-template-columns: 1fr 1fr;\n      grid-template-rows: auto;\n    }\n  `;\n\n  render() {\n    return html` <slot></slot> `;\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    'iff-grid-layout': GridLayout;\n  }\n}\n"]}