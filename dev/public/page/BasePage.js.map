{"version":3,"file":"BasePage.js","sourceRoot":"","sources":["../../../src/page/BasePage.ts"],"names":[],"mappings":";;;;;;AAAA,OAAO,EAAC,GAAG,EAAE,IAAI,EAAE,UAAU,EAAC,MAAM,KAAK,CAAC;AAC1C,OAAO,EAAC,aAAa,EAAE,QAAQ,EAAE,KAAK,EAAC,MAAM,mBAAmB,CAAC;AACjE,OAAO,EAAC,oBAAoB,EAAC,MAAM,sCAAsC,CAAC;AAE1E,OAAO,gBAAgB,CAAC;AACxB,OAAO,eAAe,CAAC;AASvB,OAAO,cAAc,CAAC;AAEtB;;;GAGG;AAEH,IAAa,QAAQ,GAArB,MAAa,QAAS,SAAQ,UAAU;IAAxC;;QA6BU,YAAO,GAAG,IAAI,oBAAoB,CAAC,IAAI,CAAC,CAAC;QAEjD;;WAEG;QAEI,UAAK,GAAmB,eAAe,CAAC;QAGvC,kBAAa,GAAG,CAAC,KAAqB,EAAE,EAAE;;YAChD,MAAA,QAAQ,CAAC,aAAa,CAAC,MAAM,CAAC,0CAAE,YAAY,CAAC,OAAO,EAAE,KAAK,EAAE;QAC/D,CAAC,CAAC;IAgCJ,CAAC;IA9BC,MAAM;QACJ,OAAO,IAAI,CAAA;;UAEL,IAAI,CAAC,OAAO,CAAC,WAAW;;+BAEH,GAAG,EAAE,CAAC,IAAI,CAAC,aAAa,CAAC,OAAO,CAAC;;;+BAGjC,GAAG,EAAE,CAAC,IAAI,CAAC,aAAa,CAAC,OAAO,CAAC;;;+BAGjC,GAAG,EAAE,CAAC,IAAI,CAAC,aAAa,CAAC,eAAe,CAAC;;;+BAGzC,GAAG,EAAE,CAAC,IAAI,CAAC,aAAa,CAAC,UAAU,CAAC;;;+BAGpC,GAAG,EAAE,CAAC,IAAI,CAAC,aAAa,CAAC,UAAU,CAAC;;;+BAGpC,GAAG,EAAE,CAAC,IAAI,CAAC,aAAa,CAAC,MAAM,CAAC;;;+BAGhC,GAAG,EAAE,CAAC,IAAI,CAAC,aAAa,CAAC,WAAW,CAAC;;;;;KAK/D,CAAC;IACJ,CAAC;CACF,CAAA;AAvEQ,eAAM,GAAG;IACd,GAAG,CAAA;;;;;;;;;;;;;;;;;;;;;;;KAuBF;CACF,CAAC;AAGF;IADC,KAAK,EAAE;yCACyC;AAMjD;IADC,QAAQ,CAAC,EAAC,OAAO,EAAE,IAAI,EAAC,CAAC;uCACqB;AAG/C;IADC,KAAK,EAAE;+CAGN;AAxCS,QAAQ;IADpB,aAAa,CAAC,eAAe,CAAC;GAClB,QAAQ,CAwEpB;SAxEY,QAAQ","sourcesContent":["import {css, html, LitElement} from 'lit';\nimport {customElement, property, state} from 'lit/decorators.js';\nimport {BuildViewsController} from '../controller/build-views-controller';\n\nimport '../atom/Button';\nimport '../atom/Title';\ntype ThemeVariation =\n  | 'light'\n  | 'black'\n  | 'blue-gradiant'\n  | 'redGreen'\n  | 'wood'\n  | 'blueGreen'\n  | 'triColor';\nimport '../atom/Text';\n\n/**\n * An example element.\n *\n */\n@customElement('iff-base-page')\nexport class BasePage extends LitElement {\n  static styles = [\n    css`\n      .button-list {\n        display: flex;\n        flex-direction: row;\n        padding-top: 5px;\n        padding-left: 25px;\n        flex-wrap: wrap;\n      }\n      .button-list :not(:last-child) {\n        padding-right: 5px;\n      }\n      .base-layout {\n        padding: 5px;\n      }\n\n      @media screen and (min-width: 724px) {\n        .button-list {\n          flex-direction: row;\n        }\n        .base-layout {\n          padding: 0px;\n        }\n      }\n    `,\n  ];\n\n  @state()\n  private content = new BuildViewsController(this);\n\n  /**\n   * Type of styling\n   */\n  @property({reflect: true})\n  public theme: ThemeVariation = 'blue-gradiant';\n\n  @state()\n  private setThemeColor = (theme: ThemeVariation) => {\n    document.querySelector('body')?.setAttribute('theme', theme);\n  };\n\n  render() {\n    return html`\n      <div class=\"base-layout\">\n        ${this.content.renderViews}\n        <div class=\"button-list\">\n          <iff-button @click=${() => this.setThemeColor('light')}>\n            <iff-text>Light</iff-text>\n          </iff-button>\n          <iff-button @click=${() => this.setThemeColor('black')}>\n            <iff-text>Black</iff-text>\n          </iff-button>\n          <iff-button @click=${() => this.setThemeColor('blue-gradiant')}>\n            <iff-text>Blue</iff-text>\n          </iff-button>\n          <iff-button @click=${() => this.setThemeColor('redGreen')}>\n            <iff-text>Red Green</iff-text>\n          </iff-button>\n          <iff-button @click=${() => this.setThemeColor('triColor')}>\n            <iff-text>TriColor</iff-text>\n          </iff-button>\n          <iff-button @click=${() => this.setThemeColor('wood')}>\n            <iff-text>Wood</iff-text>\n          </iff-button>\n          <iff-button @click=${() => this.setThemeColor('blueGreen')}>\n            <iff-text>Blue Green</iff-text>\n          </iff-button>\n        </div>\n      </div>\n    `;\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    'iff-base-page': BasePage;\n  }\n}\n"]}