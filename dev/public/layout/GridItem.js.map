{"version":3,"file":"GridItem.js","sourceRoot":"","sources":["../../../src/layout/GridItem.ts"],"names":[],"mappings":";;;;;;AAAA,OAAO,EAAC,UAAU,EAAE,IAAI,EAAE,GAAG,EAAC,MAAM,KAAK,CAAC;AAC1C,OAAO,EAAC,aAAa,EAAE,QAAQ,EAAC,MAAM,mBAAmB,CAAC;AAQ1D;;;;GAIG;AAEH,IAAa,QAAQ,GAArB,MAAa,QAAS,SAAQ,UAAU;IAAxC;;QA4EE;;WAEG;QAEI,gBAAW,GAAoB,OAAO,CAAC;QAE9C;;WAEG;QAEI,WAAM,GAAkB,IAAI,CAAC;QAEpC;;WAEG;QAEI,UAAK,GAAc,MAAM,CAAC;IAiBnC,CAAC;IAHC,MAAM;QACJ,OAAO,IAAI,CAAA,gBAAgB,CAAC;IAC9B,CAAC;CACF,CAAA;AA5GQ,eAAM,GAAG,GAAG,CAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;GAyElB,CAAC;AAMF;IADC,QAAQ,CAAC,EAAC,OAAO,EAAE,IAAI,EAAC,CAAC;6CACoB;AAM9C;IADC,QAAQ,CAAC,EAAC,OAAO,EAAE,IAAI,EAAC,CAAC;wCACU;AAMpC;IADC,QAAQ,CAAC,EAAC,OAAO,EAAE,IAAI,EAAC,CAAC;uCACO;AAMjC;IADC,QAAQ,CAAC,EAAC,OAAO,EAAE,IAAI,EAAC,CAAC;wCACC;AAM3B;IADC,QAAQ,CAAC,EAAC,OAAO,EAAE,IAAI,EAAC,CAAC;4CACS;AAxGxB,QAAQ;IADpB,aAAa,CAAC,eAAe,CAAC;GAClB,QAAQ,CA6GpB;SA7GY,QAAQ","sourcesContent":["import {LitElement, html, css} from 'lit';\nimport {customElement, property} from 'lit/decorators.js';\n\ntype gridOrientation = 'start' | 'end' | 'center';\n\ntype gridWidth = 'slim' | 'default' | 'full';\ntype gridHeight = 'default' | 'full';\ntype gridBackground = 'positive' | 'negative' | 'complement';\ntype spacerVariant = 'sm' | 'md' | 'lg' | 'component';\n/**\n * An example element.\n *\n * @slot Slot for the content\n */\n@customElement('iff-grid-item')\nexport class GridItem extends LitElement {\n  static styles = css`\n    :host([orientation='start']) {\n      justify-self: start;\n    }\n\n    :host([orientation='center']) {\n      justify-self: center;\n    }\n\n    :host([orientation='end']) {\n      justify-self: end;\n    }\n\n    :host([width='slim']) {\n      width: 100%;\n    }\n\n    :host([width='default']) {\n      width: 100%;\n    }\n\n    :host([width='full']) {\n      width: 100%;\n    }\n\n    :host([spacer='sm']) {\n      padding: var(--iff__spacer--sm);\n    }\n\n    :host([spacer='md']) {\n      padding: var(--iff__spacer--md);\n    }\n\n    :host([spacer='lg']) {\n      padding: var(--iff__spacer--lg);\n    }\n\n    :host([spacer='component']) {\n      padding: var(--iff__spacer--xxl);\n    }\n\n    :host([height='full']) {\n    }\n\n    :host([background='positive']) {\n      background: var(--iff-alias__color--positive);\n    }\n\n    :host([background='negative']) {\n      background: var(--iff-alias__color--negative);\n    }\n\n    :host([background='complement']) {\n      background: var(--iff-alias__color--complement);\n    }\n\n    @media screen and (min-width: 1024px) {\n      :host([height='full']) {\n        min-height: 80vh;\n      }\n\n      :host([width='slim']) {\n        width: 600px;\n      }\n\n      :host([width='default']) {\n        width: 1024px;\n      }\n\n      :host([width='full']) {\n        width: 100%;\n      }\n    }\n  `;\n\n  /**\n   * Orientation 'positive' | 'negative' | 'complement';\n   */\n  @property({reflect: true})\n  public orientation: gridOrientation = 'start';\n\n  /**\n   * Orientation 'positive' | 'negative' | 'complement';\n   */\n  @property({reflect: true})\n  public spacer: spacerVariant = 'sm';\n\n  /**\n   * Width\n   */\n  @property({reflect: true})\n  public width: gridWidth = 'full';\n\n  /**\n   * Height\n   */\n  @property({reflect: true})\n  public height?: gridHeight;\n\n  /**\n   * Background Color\n   */\n  @property({reflect: true})\n  public background?: gridBackground;\n\n  render() {\n    return html`<slot></slot> `;\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    'iff-grid-item': GridItem;\n  }\n}\n"]}