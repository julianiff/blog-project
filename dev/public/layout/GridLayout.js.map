{"version":3,"file":"GridLayout.js","sourceRoot":"","sources":["../../../src/layout/GridLayout.ts"],"names":[],"mappings":";;;;;;AAAA,OAAO,EAAC,UAAU,EAAE,IAAI,EAAE,GAAG,EAAC,MAAM,KAAK,CAAC;AAC1C,OAAO,EAAC,aAAa,EAAE,QAAQ,EAAC,MAAM,mBAAmB,CAAC;AAG1D;;;;GAIG;AAEH,IAAa,UAAU,GAAvB,MAAa,UAAW,SAAQ,UAAU;IAA1C;;QAkCE;;WAEG;QAEI,WAAM,GAAmB,KAAK,CAAC;IAKxC,CAAC;IAHC,MAAM;QACJ,OAAO,IAAI,CAAA,iBAAiB,CAAC;IAC/B,CAAC;CACF,CAAA;AA1CQ,iBAAM,GAAG,GAAG,CAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;GA+BlB,CAAC;AAMF;IADC,QAAQ,CAAC,EAAC,OAAO,EAAE,IAAI,EAAC,CAAC;0CACY;AAtC3B,UAAU;IADtB,aAAa,CAAC,iBAAiB,CAAC;GACpB,UAAU,CA2CtB;SA3CY,UAAU","sourcesContent":["import {LitElement, html, css} from 'lit';\nimport {customElement, property} from 'lit/decorators.js';\n\nexport type layoutVariant = '1' | '1-1' | '1-1-1';\n/**\n * An example element.\n *\n * @slot Slot for the content\n */\n@customElement('iff-grid-layout')\nexport class GridLayout extends LitElement {\n  static styles = css`\n    :host {\n      display: grid;\n      grid-template-rows: auto;\n    }\n\n    :host([layout='1']) {\n      grid-template-columns: 1fr;\n    }\n\n    :host([layout='1-1']) {\n      grid-template-columns: 1fr;\n    }\n\n    :host([layout='1-1-1']) {\n      grid-template-columns: 1fr;\n    }\n\n    @media screen and (min-width: 1024px) {\n      :host([layout='1']) {\n        grid-template-columns: 1fr;\n      }\n\n      :host([layout='1-1']) {\n        grid-template-columns: 1fr 1fr;\n      }\n\n      :host([layout='1-1-1']) {\n        grid-template-columns: 1fr 1fr 1fr;\n      }\n    }\n  `;\n\n  /**\n   * Height\n   */\n  @property({reflect: true})\n  public layout?: layoutVariant = '1-1';\n\n  render() {\n    return html` <slot></slot> `;\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    'iff-grid-layout': GridLayout;\n  }\n}\n"]}